# cat << EOF > /dev/null

# -- general
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',xterm-256color:RGB'
setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

set -g history-limit 10000

# set-hook -g pane-focus-in "run -b 'bash ~/.config/tmux/fzf_panes.tmux update_mru_pane_ids'"
# bind -n M-w run -b 'bash ~/.config/tmux/fzf_panes.tmux new_window'

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# set -ga update-environment '\
DISPLAY DBUS_SESSION_BUS_ADDRESS \
QT_IM_MODULE QT_QPA_PLATFORMTHEME \
SESSION_MANAGER \
XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME\
XDG_MENU_PREFIX XDG_RUNTIME_DIR XDG_SESSION_CLASS \
XDG_SESSION_DESKTOP XDG_SESSION_TYPE XDG_CURRENT_DESKTOP \
XMODIFIERS \
FZF_DEFAULT_OPTS \
'
set-hook -g client-attached 'run -b "cut -c3- ~/.tmux.conf | sh -s update_env_event"'

# -- prefix
unbind C-b
set -g prefix 'C-a'

# -- display
set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on
set -g renumber-windows on

set -g set-titles on

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 1

# -- navigation

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

bind -r ( switch-client -p
bind -r ) switch-client -n

# window navigation
bind c new-window -c "#{pane_current_path}"
bind n next-window
bind p previous-window
bind o last-window        # move to last active window
bind q killp

# key bindings for horizontal and vertical panes
unbind %
bind | split-window -h -c "#{pane_current_path}" # 使用|竖屏，方便分屏
unbind '"'
bind - split-window -v -c "#{pane_current_path}" # 使用-横屏，方便分屏

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

set -g status-keys vi
set -g mode-keys vi

# bind -n M-v copy-mode
bind v copy-mode # enter copy mode

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi n send-keys -X cursor-left
bind -T copy-mode-vi i send-keys -X cursor-right
bind -T copy-mode-vi u send-keys -X cursor-up
bind -T copy-mode-vi e send-keys -X cursor-down
bind -T copy-mode-vi h send-keys -X next-word-end
bind -T copy-mode-vi U send-keys -N 5 -X cursor-up
bind -T copy-mode-vi E send-keys -N 5 -X cursor-down
bind -T copy-mode-vi N send-keys -X start-of-line
bind -T copy-mode-vi I send-keys -X end-of-line
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi = send-keys -X search-again
bind -T copy-mode-vi = send-keys -X search-reverse


bind B list-buffers
bind b choose-buffer # choose which buffer to paste from
# bind p paste-buffer

# -- toggle_syn_input
# bind C-g if-shell '[[ $(tmux showw synchronize-panes | cut -d\  -f2) == "on" ]]' \
# 'setw synchronize-panes off; set -g pane-border-style fg=magenta' \
# 'setw synchronize-panes on; set -g pane-border-style fg=red'

# -- toggle_status
# bind s if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
# 'set -g status off' \
# 'set -g status on'

# -- fzf_url
# bind l run -b 'cut -c3- ~/.tmux.conf | sh -s fzf_url'

# run 'cut -c3- ~/.tmux.conf | sh -s bind_with_sys_clipboard'

# -- theme
#set -g status off

# panes
#setw -g pane-border-status bottom
setw -g pane-border-format '#[bold]#{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\
#{?pane_active,❐ #S:#I/#{session_windows} ,}#{?window_zoomed_flag,⬢,❄} #P ⇒ #{pane_tty} #{pane_current_command}'
#set -g pane-active-border-style fg=brightblue
#set -g pane-border-style fg=magenta

# windows
set -g status-justify 'centre'
# set -g status-justify 'left'
set -g status-left-length 90
set -g status-right-length 140
setw -g window-status-separator ''

# default statusbar colors
set -g status-bg colour235 
# set -g status-left ' #[fg=magenta,bold]❐ #S'
#set -g status-left '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta,bold] %Y-%m-%d %H:%M '
#set -g status-right '#(rainbarf --battery --remaining --bolt --tmux --rgb)'
# set -g status-left "#[fg=magenta,bold] %Y-%m-%d %H:%M | #[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
setw -g window-status-format '#[fg=brightblue] #I #W '
setw -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'
setw -g window-status-activity-style bg=black
setw -g window-status-bell-style bg=black
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"


set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"

# run-shell ~/.config/tmux/extrakto/extrakto.tmux
#set-option -g status-utf8 on
#set -g status-left '#(rainbarf --battery --remaining --bolt --rgb)'

# set-option default-path "$PWD"


# EOF
# bind_with_sys_clipboard() {
#     if [[ -x $(command -v xsel) ]]; then
#         cmd='xsel -i -b'
#     elif [[ -x $(command -v xclip) ]]; then
#         cmd='xclip -i -selection clipboard'
#     fi
#     if [[ -n $cmd ]]; then
#         while IFS= read -r line; do
#             [[ -z $line ]] && continue
#             bind_key=$(printf '%s' "$line" |
#                 sed -E "s/copy-selection(-and-cancel)?$/copy-pipe\1 \"$cmd\"/g")
#             eval "tmux $bind_key"
#         done <<< $(tmux list-keys | grep -E 'copy-selection|copy-pipe')
#     fi
# }
#
# fzf_url() {
#     local ip4_seg="(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])"
#     local path_set="[-a-zA-Z0-9@:%_\+\.~#?&//=]"
#     local url_re="(https?|ftp|file)://($path_set+|(($ip4_seg\.){3,3}$ip4_seg$path_set*))"
#     local -a url=($(tmux capture-pane -S - -Jp | grep -oE "$url_re"))
#     if [[ -z $url ]]; then
#         return 0
#     else
#         printf "%s\n" ${url[@]} |
#             sort -u |
#             nl -w3 -s '  ' |
#             fzf-tmux -d 25% --multi --exit-0 --cycle --reverse |
#             awk '{print $2}' |
#             xargs -I {} xdg-open {} &> /dev/null
#     fi
# }
#
# update_env_event() {
#     local event='client-attached'
#     local event_dir=${TMUX%%,*}-event
#     mkdir -p $event_dir 2>/dev/null
#     rm $event_dir/$event-pane* 2>/dev/null
#     tmux list-panes -a -F '#D' | sed -E "s|^(.*)$|$event_dir/$event-pane-\1|g" | xargs touch
# }
#
# "$@"

#设置窗口名称
set-window-option -g window-status-current-format ' #[fg=magenta,bold]#{window_index} #[fg=colour124]#{pane_current_command} #[fg=magenta,bold]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=27]|'
set-window-option -g window-status-format ' #[fg=brightblue]#{window_index} #[fg=27]#{pane_current_command} #[fg=brightblue]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=27]|'
bind-key -r w choose-window -F '#{window_index} | #{pane_current_command} | #{host} | #{pane_current_path}'
